const config = require("./config");
const swaggerAutogen = require('swagger-autogen')()

const outputFile = './src/swagger_output.json'
const endpointsFiles = ['./src/endpoints.js']

const doc = {
    info: {
        version: "1.0.0",
        title: "The Sphere API",
        description: "Documentation automatically generated by the <b>swagger-autogen</b> module."
    },
    host: `localhost:${config.port}`,
    basePath: "/",
    schemes: ['http', 'https'],
    consumes: ['application/json'],
    produces: ['application/json'],
    tags: [
        {
            "name": "Auth",
            "description": "Authentication"
        },
        {
            "name": "Bundles",
            "description": "Bundles"
        },
        {
            "name": "Cards",
            "description": "Cards"
        },
        {
            "name": "Tokens",
            "description": "Tokens"
        },
        {
            "name": "Transactions",
            "description": "Transactions"
        },
        {
            "name": "Wallets",
            "description": "Wallets"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "Marketing-Listing",
            "description": "Marketing-Listing"
        },
    ],
    authAction: {
        JWT: {
            name: "JWT",
            schema: {
                type: "apiKey",
                in: "header",
                name: "Authorization",
                description: ""
            },
            value: "Bearer <JWT>",
        },
    },
    securityDefinitions: {
        apiKeyAuth: {
            type: "apiKey",
            in: "header",
            name: "Authorization",
            description: "JWT token used for API. Get this from auth/login route. Use like \"Bearer [jwtToken]\" (without [ / ])",
        }
    },
    definitions: {
        ForgotPassword: {
            $email: "example@example.com",
        },
        LoginUser: {
            $email: "example@example.com",
            $password: "password",
        },
        RegisterUser: {
            $email: "example@example.com",
            $firstName: 'Bill',
            $lastName: 'Clinton',
            $telegramId: '12387123721213',
            $password: "password",
            $active: true,
        },
        ResetPassword: {
            $token: "XXXXXXX",
            $password: "password",
        },
        RevokeToken: {
            $token: "XXXXXXX",
        },
        VerifyEmail: {
            $token: "XXXXXXX",
        },
        TelegramLogin: {
            $first_name: "Donald",
            $id: '1238723873',
            $last_name: "Duck",
            $hash: "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        },
        TelegramConnect: {
            $userId: "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            $telegramId: '1238723873',
        },
    },
};


swaggerAutogen(outputFile, endpointsFiles, doc);
